package Logic;


/**
 * Αυτή η κλάση αναπαριστά την λειτουργία του γύρου 'Ποντάρισμα'
 * και κληρονομεί από το interface GameMode
 */
public class BetMode implements GameMode {

    private int points;
    private int points1;
    private int points2;

    /**
     * Κατασκευαστής/Constructor
     */
    public BetMode() {
    }

    /**
     * Μέθοδος η οποία επιστρέφει το όνομα του γύρου 'Ποντάρισμα'
     * @return το όνομα του τρέχοντα γύρου
     */
    @Override
    public String getModeName() {
        return "Bet Mode";
    }

    /**
     * Μέθοδος η οποία επιστρέφει τους πόντους που κέρδισε/έχασε ο παίχτης στο ατομικό παιχνίδι του γύρου Ποντάρισμα.
     * Αν απαντήσει σωστά κερδίζει τους πόντους που πόνταρε.
     * Αν απαντήσει λάθος χάνει τους πόντους που πόνταρε.
     * @param isCorrect αν η απάντηση του παίχτη είναι σωστή ή όχι
     * @param y δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @return τους πόντους που κέρδισε/έχασε
     */
    @Override
    public int getPoints(boolean isCorrect, double y) {
        if(isCorrect)
            return points;
        else
            return -points;
    }

    /**
     * Μέθοδος η οποία επιστρέφει τους πόντους που κέρδισε/έχασε ο παίχτης 1 στο ανταγωνιστικό παιχνίδι του γύρου Ποντάρισμα.
     * Αν απαντήσει σωστά κερδίζει τους πόντους που πόνταρε.
     * Αν απαντήσει λάθος χάνει τους πόντους που πόνταρε.
     * @param isCorrect αν η απάντηση του παίχτη1 είναι σωστή ή όχι
     * @param y δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @param z δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @param k δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @return τους πόντους που κέρδισε/έχασε
     */
    @Override
    public int getPoints1(boolean isCorrect , double y, boolean z, boolean k) {
        if(isCorrect)
            return points1;
        else
            return -points1;
    }

    /**
     * Μέθοδος η οποία επιστρέφει τους πόντους που κέρδισε/έχασε ο παίχτης 2 στο ανταγωνιστικό παιχνίδι του γύρου Ποντάρισμα.
     * Αν απαντήσει σωστά κερδίζει τους πόντους που πόνταρε.
     * Αν απαντήσει λάθος χάνει τους πόντους που πόνταρε.
     * @param isCorrect isCorrect αν η απάντηση του παίχτη2 είναι σωστή ή όχι
     * @param y δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @param z δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @param k δεν χρησιμοποίειται στη συγκεκριμένη μέθοδο
     * @return τους πόντους που κέρδισε/έχασε
     */
    @Override
    public int getPoints2(boolean isCorrect, double y, boolean z, boolean k) {
        if(isCorrect)
            return points2;
        else
            return -points2;
    }

    /**
     * Μέθοδος η οποία αρχικοποιεί τη μεταβλητή points σύμφωνα
     * με του πόντους που πόνταρε ο παίχτης στο ατομικό παιχνίδι.
     * @param bet το ποντάρισμα του παίχτη
     */
    public void setBet(int bet){ points = bet; }

    /**
     * Μέθοδος η οποία αρχικοποιεί τη μεταβλητή points1 σύμφωνα
     * με του πόντους που πόνταρε ο παίχτης1 στο ανταγωνιστικό παιχνίδι.
     * @param bet το ποντάρισμα του παίχτη1
     */
    public void setBet1(int bet){ points1 = bet; }

    /**
     * Μέθοδος η οποία αρχικοποιεί τη μεταβλητή points2 σύμφωνα
     * με του πόντους που πόνταρε ο παίχτης2 στο ανταγωνιστικό παιχνίδι.
     * @param bet το ποντάρισμα του παίχτη2
     */
    public void setBet2(int bet){ points2 = bet; }


}